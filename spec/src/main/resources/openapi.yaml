openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v2.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: employee
    description: Endpoints to manage the employees
paths:
  /api/v1/employees/{id}:
    get:
      tags:
        - employee
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/EmployeeDto"
    put:
      tags:
        - employee
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEmployeeDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/EmployeeDto"
    delete:
      tags:
        - employee
      operationId: deleteEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: string
  /api/v1/employees:
    get:
      tags:
        - employee
      operationId: getAllEmployees
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EmployeeDto"
    post:
      tags:
        - employee
      operationId: saveEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEmployeeDto"
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/EmployeeDto"
components:
  schemas:
    CreateEmployeeDto:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int32
        designation:
          type: string
        phoneNumber:
          type: string
        joinedOn:
          type: string
          format: date
        address:
          type: string
        dateOfBirth:
          type: string
          format: date
    EmployeeDto:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int32
        designation:
          type: string
        phoneNumber:
          type: string
        joinedOn:
          type: string
          format: date
        address:
          type: string
        dateOfBirth:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time

        updatedAt:
          type: string
          format: date-time
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
